plugins {
	id 'java'
	id 'groovy'
	id 'maven'
	id 'maven-publish'
	id 'idea'
	id 'signing'
	id 'checkstyle'
	id 'jacoco'
	id "com.diffplug.gradle.spotless" version "3.27.0"
	id 'org.sonarqube' version '2.8'
	id 'com.google.protobuf' version '0.8.8'
}

apply from: 'dependencies.gradle'
apply from: 'gradle/quality.gradle'
apply from: 'gradle/protobuf.gradle'
apply from: 'gradle/pyatlas.gradle'
apply from: 'gradle/deployment.gradle'

description = "Atlas Library"

sourceCompatibility=11
targetCompatibility=11

repositories
{
    // For geotools
    maven { url "http://repo.osgeo.org/repository/release/" }
    mavenCentral()
}

configurations
{
    shaded
}

dependencies
{
    compile packages.slf4j.api
    compile packages.junit
    compile packages.opencsv
    compile packages.gson
    compile packages.math
    compile packages.http
    compile packages.jts
    compile packages.jtslab
    compile packages.spatial4j
    compile packages.geotools
    compile packages.osmosis.core
    compile packages.osmosis.pbf
    compile packages.osmosis.xml
    compile packages.osmosis.hstore
    compile packages.commons.io
    compile packages.commons.cli
    compile packages.commons.csv
    compile packages.commons.lang
    compile packages.classgraph
    compile packages.guava
    compile packages.jsonassert
    compile packages.jackson.core
    compile packages.jackson.databind
    compile packages.jackson.dataformat
    compile packages.protobuf_java
    compile packages.protoc
    compile packages.artifact
    compile packages.groovy
    compile packages.checkstyle
    compile packages.diff_utils
    compile packages.groovy_json
    compile packages.jim_fs

    testCompile packages.checkstyle_tests

    checkstyle packages.checkstyle
    checkstyle packages.atlas_checkstyle

    shaded project.configurations.getByName('compile')
    shaded packages.slf4j.log4j12
    shaded packages.log4j
}

task shaded(type: Jar){
    baseName = project.name
    classifier = 'shaded'
    from
    {
        configurations.shaded.collect
        {
            it.isDirectory() ? it : zipTree(it).matching{
                exclude
                {
                    it.path.contains('META-INF') && (it.path.endsWith('.SF') || it.path.endsWith('.DSA') || it.path.endsWith('.RSA'))
                }
            }
        }
    }
    with jar
    zip64 = true
}

/**
 * Artifact related items
 */
task javadocJar(type: Jar) {
    classifier = 'javadoc'
    from javadoc
}

task sourcesJar(type: Jar) {
    classifier = 'sources'
    from sourceSets.main.allSource
}

artifacts
{
    archives javadocJar, sourcesJar
}

/*
 * This is to skip the tasks for which there is a skip<TaskName>=true
 * environment variable
 */
def skippedTaskNames = System.getenv().findAll { key, value ->
    key.startsWith("skip") && value.equalsIgnoreCase("true")
}.keySet().collect { it.substring(4) }
gradle.startParameter.excludedTaskNames += skippedTaskNames

idea {
    project {
        languageLevel = '1.8'
    }
}
