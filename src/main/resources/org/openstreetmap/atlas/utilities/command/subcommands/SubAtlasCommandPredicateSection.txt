The 'subatlas' command supports predicate slicing using Groovy integration. When you supply
code to the '--predicate' option, you are supplying a Groovy boolean expression which will be applied
as a Predicate<AtlasEntity>. Your expression will be wrapped in some Groovy code that handles
imports for you, as well as conversion from the expression to the Java Predicate<AtlasEntity>.
If you need to import additional packages beyond the ones included by default, specify a comma
separated list of package names to the '--imports' option like so:
'--imports=com.hello.world,com.foo.bar'

Note that the AtlasEntity against which you are testing is explicitly bound to a variable called
'e'. See the following examples:

Filter down to only points:
#--predicate 'e.getType() == ItemType.POINT'
Filter down to only primary highways:
#--predicate 'e.getTag("highway").orElse("").equals("primary")'
Filter out all entities that are not members of at least one relation:
#--predicate '!e.relations().isEmpty()'
