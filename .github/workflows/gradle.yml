# This workflow will build a Java project with Gradle
# For more information see: https://help.github.com/actions/language-and-framework-guides/building-and-testing-java-with-gradle

name: CI Quality Check 0

on:
  push:
    branches: [ actions-test ]
  pull_request:
    branches: [ actions-test ]
  workflow_dispatch:
    inputs:
      MANUAL_RELEASE_TRIGGERED:
        description: "Environment Variable used to trigger a Maven Central release"
        required: false
        default: "true"

jobs:
  build:

    runs-on: ubuntu-latest

    steps:

# Setup
    - uses: actions/checkout@v2
    - name: Set up JDK 11
      uses: actions/setup-java@v1.4.3
      with:
        java-version: 11.0.2
    - name: Grant execute permission for gradlew
      run: chmod +x gradlew
    - name: Grant execute permission for Github Actions Workflows
      run: chmod -R ug+x .github/workflow_scripts

# Quality Checks
    - name: ShellCheck PyAtlas
      run: shellcheck pyatlas/*.sh
    - name: Quality checks (No tests)
      run: ./gradlew jar check -x test -x integrationTest
    - name: Tests
      run: ./gradlew check
    - name: Sonar
      env:
        SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        SONAR_PR_DECORATION_GITHUB_TOKEN: ${{ secrets.SONAR_PR_DECORATION_GITHUB_TOKEN }}
      run: .github/workflow_scripts/sonar.sh

# Sign and Publish
    - name: Decrypt GPG key (To sign artifacts)
      env:
        GPG_KEY_LOCATION: secring.gpg
        GPG_AES256_PASSPHRASE: ${{ secrets.GPG_AES256_PASSPHRASE }}
      run: .github/workflow_scripts/decrypt_gpg_key.sh
    - name: Sign and Upload Archives
      env:
        GPG_KEY_LOCATION: secring.gpg
        GPG_KEY_ID: ${{ secrets.GPG_KEY_ID }}
        GPG_PASSPHRASE: ${{ secrets.GPG_PASSPHRASE }}
        SONATYPE_USERNAME: ${{ secrets.SONATYPE_USERNAME }}
        SONATYPE_PASSWORD: ${{ secrets.SONATYPE_PASSWORD }}
        MANUAL_RELEASE_TRIGGERED: ${{ github.event.inputs.MANUAL_RELEASE_TRIGGERED }}
      run: .github/workflow_scripts/deploy.sh
    - name: Tag main branch
      env:
        MANUAL_RELEASE_TRIGGERED: ${{ github.event.inputs.MANUAL_RELEASE_TRIGGERED }}
        MERGE_TAG_GITHUB_SECRET_TOKEN: ${{ secrets.MERGE_TAG_GITHUB_SECRET_TOKEN }}
      run: .github/workflow_scripts/tag-main.sh
